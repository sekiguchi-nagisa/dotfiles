source repl inlined

$HISTFILESIZE = 4096 * 4
$HISTSIZE = 4096 * 4
history -r # reload

let _ls_opt =
(case $OSTYPE {
    'linux' | 'cygwin' | 'msys'=> [ '--color=auto' ]
    'darwin' => [ '-G' ]
    else => new [String]()
})

ls() {
    command ls $_ls_opt $@
}

grep() {
    command grep --color=auto $@
}

la() {
    ls -la $@
}

ll() {
    ls -ll $@
}

if (command -v /usr/bin/cnf &>> /dev/null) {  # use absolute path due to broken PATH
    $CNF_HOOK = function($s : String, $a : [String]) => /usr/bin/cnf $s
}

if (command -v powerline-go &>>  /dev/null) {
    hash powerline-go
    $PROMPT_HOOK = function($s : String) => {
        var ret = "$(powerline-go -error $? -shell bash -condensed -colorize-hostname -max-width 50
                                    -modules venv,user,host,ssh,cwd,perms,git,jobs,exit,root
                    )"
        $ret.ifEmpty($PS1)!
    }
}

function _open($c : String) {
    case $OSTYPE {
    'linux' => (uname -r | grep '[Mm]icrosoft' &>> /dev/null) ? (explorer.exe "$(wslpath -aw $c)") : (xdg-open $c &!)
    'darwin' => command open $c
    'cygwin'|'msys' => explorer.exe $c
    else => echo 1>&2 unsupported os: $OSTYPE
    }
}

open() {
    for $e in $@ {
        $_open($e)
    }
}

code() {
    if(checkenv WAYLAND_DISPLAY) {
        command code --ozone-platform-hint=wayland --enable-wayland-ime -- $@
    } else {
        command code $@
    }
}

function _clipboard_copy(line: String, aa: [String]?): String? {
    if (command -v pbcopy &>> /dev/null) {
        printf "%s" $line | pbcopy
    } elif (checkenv WAYLAND_DISPLAY && command -v wl-copy &>> /dev/null) {
        printf "%s" $line | wl-copy &!
    } elif (command -v xclip &>> /dev/null) {
        printf "%s" $line | xclip -selection clipboard
    } elif (command -v clip.exe &>> /dev/null) {
        printf "%s" $line | clip.exe
    }
    return $none
}

# CTRL-S
$LINE_EDIT.config('flow-control', $false)
$LINE_EDIT.action('clipboard-copy', 'replace-whole', $_clipboard_copy)
$LINE_EDIT.bind('^S', 'clipboard-copy')

# for fzf options
command -v bat &>> /dev/null && setenv FZF_SELECT_FILES_OPTS="--preview 'bat -n -f {} --theme=Nord'"
command -v tree &>> /dev/null && setenv FZF_CD_OPTS="--preview 'tree -C {}'"

# for proxy
source? ~/extra_setting.ds inlined

# for carapace backed completion
source? $MODULE_HOME/carapace.arsh

# shell-hook
source? $MODULE_HOME/shtx inlined
if (command -V fake_source &>> /dev/null) {
    fake_source /dev/stdin << 'EOF'
## command not found
if command -v /usr/bin/cnf &>> /dev/null; then
  command_not_found_handle() { /usr/bin/cnf "$1"; }
fi

## mise integration
if [ -e ~/.local/bin/mise ]; then
  eval "$(~/.local/bin/mise activate bash)"
elif command -v mise &>> /dev/null; then
  eval "$(mise activate bash)"
else
  return
fi

_mise_hook  # force invoke hook

EOF

    command -v npm &>> /dev/null && fake_source <(npm completion)
}

# for ssh-agent
if $OSTYPE == 'linux' && (checkenv XDG_RUNTIME_DIR) {
    importenv XDG_RUNTIME_DIR
    exportenv SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"
}

true
