source repl inlined

$HISTFILESIZE = 4096
$HISTSIZE = 4096

let _ls_opt =
(case $OSTYPE {
    'linux' | 'cygwin' | 'msys'=> [ '--color=auto' ]
    'darwin' => [ '-G' ]
    else => new [String]()
})

ls() {
    command ls $_ls_opt $@
}

grep() {
    command grep --color=auto $@
}

la() {
    ls -la $@
}

ll() {
    ls -ll $@
}

if (command -v cnf &>> /dev/null) {
    $CNF_HOOK = function($s : String, $a : [String]) => cnf $s
}

if (command -v powerline-go &>>  /dev/null) {
    hash powerline-go
    $PROMPT_HOOK = function($s : String) => {
        var ret = "$(powerline-go -error $? -shell bash -condensed -colorize-hostname -max-width 50
                                    -modules venv,user,host,ssh,cwd,perms,git,jobs,exit,root
                    )"
        $ret :- $PS1
    }
}

function _open($c : String) {
    case $OSTYPE {
    'linux' => (uname -r | grep '[Mm]icrosoft' &>> /dev/null) ? (explorer.exe "$(wslpath -aw $c)") : (xdg-open $c &!)
    'darwin' => command open $c
    'cygwin'|'msys' => explorer.exe $c
    else => echo 1>&2 unsupported os: $OSTYPE
    }
}

open() {
    for $e in $@ {
        $_open($e)
    }
}

# for fzf options
command -v bat &>> /dev/null && setenv FZF_SELECT_FILES_OPTS="--preview 'bat -n -f {} --theme=Nord'"
command -v tree &>> /dev/null && setenv FZF_CD_OPTS="--preview 'tree -C {}'"

# for proxy
source? ~/extra_setting.ds inlined

# shell-hook
source? $MODULE_HOME/shtx inlined
command -V fake_source &>> /dev/null && fake_source /dev/stdin << 'EOF'
## command not found
if command -v cnf &>> /dev/null; then
  command_not_found_handle() { cnf "$1"; }
fi

## mise integration
if [ -e ~/.local/bin/mise ]; then
  eval "$(~/.local/bin/mise activate bash)"
elif command -v mise &>> /dev/null; then
  eval "$(mise activate bash)"
fi

EOF

true
