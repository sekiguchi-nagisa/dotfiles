
ls() {
    command ls ${$OSTYPE == 'Linux' ? '--color=auto' : 
                 $OSTYPE == 'Darwin' ? '-G' : ''} $@
}

grep() {
    command grep --color=auto $@
}

la() {
    ls -la $@
}

ll() {
    ls -ll $@
}


source edit

$PS1 = '\u@\h:\w> '


source cnf
function _cnf($s : String, $a : [String]) {
    cnf $s
}
if (command -v cnf &> /dev/null) {
    $CNF_HOOK = $_cnf
}

$ISDIR_HOOK = function($s : String) => command cd $s && la



function _prompt($s : String) : String {
    var ret = "$(powerline-go -error $? -shell bash -condensed -colorize-hostname -max-width 50)"
    return $ret :- $PS1
}

if (command -v powerline-go &>  /dev/null) {
    $PROMPT_HOOK = $_prompt
}

source path inlined

function _ff($path : String) : String {
    command -v fzf &> /dev/null || return "";
    command -v find &> /dev/null || return "";
    var p = $path :- "."

    var dir = "$(find $p -path '*/\.*' -prune \
                  -o  -print 2> /dev/null | fzf +m -1)"
    return $dir
}


fd() {
    var dir = $_ff($1)
    if !(test -d "$dir") {
        $dir = $dirname($dir)
    }
    $dir.empty() || cd $dir && ls
}

function _open($c : String) {
    case $OSTYPE {
    'Linux' => (uname -r | grep '[Mm]icrosoft' &> /dev/null) ? (explorer.exe "$(wslpath -aw $c)") : xdg-open $c
    'Darwin' => command open $c
    else => echo 1>&2 unsupported os: $OSTYPE
    }
}

open() {
    for $e in $@ {
        $_open($e)
    }
}

fo() {
    var path = $_ff($1)
    var dir = $path
    if !(test -d "$dir") {
        $dir = $dirname($dir)
    }
    $path.empty() || open $path
    $dir.empty() || cd $dir && ls
}

if (command -v dscolorize > /dev/null) {
    $HIGHLIGHTER = function($s : String) => "$(dscolorize <<< $s)"
}


# for completion
source completion
if $OSTYPE == "Darwin" {
    $BASH_COMPLETION_PATH = "/opt/homebrew/share/bash-completion/bash_completion"
}
source $DATA_DIR/completion/*

# for proxy
source! ~/proxy_setting.ds inlined
